library(devtools)
library(roxygen2)
library(GSTools)
?ploting_individual_cells()
library(devtools)
library(roxygen2)
document()
install("GSTools")
setwd("..")
install("GSTools")
library(GSTools)
?ploting_individual_cells()
?document()
document(GSTools)
document("GSTools")
?ploting_individual_cells()
?GSTools
?GSTools
?Optimize_LSU
?Run_simulation
?GSTools
?GSTools
?GSTools
?GSTools
?GSTools
viridis
?Optimize_LSU
document("GSTools")
?GSTools
?GSTools
library(GSTools)
?GSTools
?GSTools
?GSTools
?GSTools
?GSTools
library(GSTools)
?GSTools
library(GSTools)
?GSTools
library(GSTools)
?GSTools
?GSTools
?GSTools
?GSTools
library(GSTools)
?GSTools
?create_map
library(GSTools)
?create_map
inputs = c(colnames(df.harvest)[-ncol(df.harvest)])
library(keras)
library(tidyr)
library(readr)
mainDir <- "C:/Users/MarcosPaulo/OneDrive/PIK - Intership/PIK-projects"
setwd(mainDir)
weather <- read_csv("C:/Users/MarcosPaulo/OneDrive/PIK - Intership/PIK-projects/global_weather_2000.csv")
load("C:/Users/MarcosPaulo/OneDrive/PIK - Intership/PIK-projects/grass_results4Marcos.RData")
load("C:/Users/MarcosPaulo/OneDrive/PIK - Intership/PIK-projects/LPJML_inputs/soil_type.Rdata")
load("C:/Users/MarcosPaulo/OneDrive/PIK - Intership/PIK-projects/wt_f.Rdata")
df_harvest = read_rds("C:/Users/MarcosPaulo/OneDrive/PIK - Intership/PIK-projects/GrassData2/df_harvest25.Rds")
source("create_model_input_gams.R")
set.seed(310)
#harvest = maps[,,"harvest"]
harvest = df_harvest
#updating df.harvest to add spatial information
df.combined = cbind(harvest,grid,weather[,c(1,3,5)],soil_type)
df.harvest = df.combined %>% gather(key = "LSU","lon":"radiation_mean","0":"25")
colnames(df.harvest)[ncol(df.harvest)] = "gCm2"
df.harvest$LSU = as.numeric(df.harvest$LSU)/10
inputs = c(colnames(df.harvest)[-ncol(df.harvest)])
inputs
library(GSTools)
?export_weights_gams
library(GSTools)
?export_weights_gams
?GSTools
library(GSTools)
?GSTools
library(GSTools)
?GSTools
library(GSTools)
?create_map
library(GSTools)
?create_map
library(GSTools)
?GSTools
library(GSTools)
?GSTools
input_data = as.data.frame(cbind(maps[,,"harvest"],rowMeans(maps[,,"harvest"])))
input_data <- input_data %>% gather("LSU", "output", "00":"20")
input_data[,2] = as.numeric(input_data[,2])/10
View(input_data)
# input data pre-processing
input_data = as.data.frame(cbind(maps[,,"harvest"],rowMeans(maps[,,"harvest"])))
View(input_data)
input_data <- input_data %>% gather("LSU", "output", "00":"20")
View(input_data)
names(input_data) = c("x","w","y")
library(GSTools)
?GSTools
?GSTools
library(GSTools)
library(GSTools)
?GSTools
library(GSTools)
?GSTools
library(GSTools)
?GStools
library(GSTools)
?GStools
?GSTools
library(GSTools)
?GSTools
a
a
library(GSTools)
library(GSTools)
devtools::load_all(".")
install.packages("C:/Users/MarcosPaulo/OneDrive/simulator_building_tools/GSTools_0.0.0.1.zip", repos = NULL, type = "win.binary")
library(GSTools)
library(GSTools)
library(GSTools)
library("GSTools", lib.loc="~/R/win-library/3.5")
?create_map
crete_map()
create_map()
devtools::load_all(".")
GSTools::
install(GSTools)
GSTools::
install("GSTools")
library(devtools)
GSTools::
install("GSTools")
setwd("..")
install("GSTools")
library(GSTools)
GSTools::
install()
build()
library(devtools)
build()
install()
library(GSTools)
?create_map
library(GSTools)
library(ggplot2)
library(ggmap)
library(tidyverse)
library(viridis)
library(GSTools)
library(GSTools)
library(GSTools)
library(GSTools)
